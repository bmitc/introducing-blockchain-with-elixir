<!-- livebook:{"persist_outputs":true} -->

# Section 3.6 Integrating Components

## Dependencies and helper module

```elixir
alias Blockchain.{
  Block,
  Hash,
  Main,
  Transaction,
  TransactionIO,
  Utilities,
  Wallet
}
```

<!-- livebook:{"output":true} -->

```
[Blockchain.Block, Blockchain.Hash, Blockchain.Main, Blockchain.Transaction,
 Blockchain.TransactionIO, Blockchain.Utilities, Blockchain.Wallet]
```

```elixir
defmodule Blockchain.Main do
  @doc """
  Helper module that provides various printing functionality
  """

  alias Blockchain
  alias Blockchain.Block
  alias Blockchain.Wallet

  @spec print_blockchain(Blockchain.t()) :: Blockchain.t()
  def print_blockchain(%Blockchain{blocks: blocks} = blockchain) do
    for block <- blocks do
      block
      |> Block.format()
      |> IO.puts()
    end

    blockchain
  end

  @spec print_wallets(Blockchain.t(), Wallet.t(), Wallet.t()) :: Blockchain.t()
  def print_wallets(%Blockchain{} = blockchain, %Wallet{} = wallet_a, %Wallet{} = wallet_b) do
    """
    Wallet A balance: #{Blockchain.balance_wallet_blockchain(blockchain, wallet_a)}
    Wallet B balance: #{Blockchain.balance_wallet_blockchain(blockchain, wallet_b)}
    
    """
    |> IO.puts()

    blockchain
  end
end
```

<!-- livebook:{"output":true} -->

```
{:module, Blockchain.Main, <<70, 79, 82, 49, 0, 0, 11, ...>>, {:print_wallets, 3}}
```

## Main

```elixir
file_path = Path.join(__DIR__, "blockchain")

if File.exists?(file_path) do
  IO.puts("Found 'blockchain.data', reading ...\n")

  file_path
  |> Utilities.file_to_data()
  |> Main.print_blockchain()
end
```

<!-- livebook:{"output":true} -->

```
nil
```

Initialize wallets ...

```elixir
coin_base = Wallet.new()
wallet_a = Wallet.new()
wallet_b = Wallet.new()
:ok
```

<!-- livebook:{"output":true} -->

```
:ok
```

Make genesis transaction ...

```elixir
genesis_transaction = Transaction.new(coin_base, wallet_a, 100, [])
:ok
```

<!-- livebook:{"output":true} -->

```
:ok
```

Initialize blockchain and print wallet balances ...

```elixir
blockchain = Blockchain.initialize(genesis_transaction, Hash.new("1337cafe"))
Main.print_wallets(blockchain, wallet_a, wallet_b)
:ok
```

<!-- livebook:{"output":true} -->

```
Wallet A balance: 100
Wallet B balance: 0


```

<!-- livebook:{"output":true} -->

```
:ok
```

Make second and third transactions ...

```elixir
blockchain =
  blockchain
  |> Blockchain.send_money(wallet_a, wallet_b, 2)
  |> Main.print_wallets(wallet_a, wallet_b)
  |> Blockchain.send_money(wallet_b, wallet_a, 1)
  |> Main.print_wallets(wallet_a, wallet_b)
  |> Blockchain.send_money(wallet_b, wallet_a, 3)
  |> Main.print_wallets(wallet_a, wallet_b)

:ok
```

<!-- livebook:{"output":true} -->

```
Wallet A balance: 148.0
Wallet B balance: 2


Wallet A balance: 149.0
Wallet B balance: 51.0


Wallet A balance: 152.0
Wallet B balance: 98.0


```

<!-- livebook:{"output":true} -->

```
:ok
```

```elixir
blockchain = blockchain

:ok
```

<!-- livebook:{"output":true} -->

```
:ok
```

Check blockchain validity ...

```elixir
IO.puts("Blockchain is valid?: #{Blockchain.valid?(blockchain)}")
```

<!-- livebook:{"output":true} -->

```
Blockchain is valid?: true
```

<!-- livebook:{"output":true} -->

```
:ok
```

Print all blocks in blockchain ...

```elixir
Main.print_blockchain(blockchain)
:ok
```

<!-- livebook:{"output":true} -->

```
Block information
=================
Hash: 2020e3ce8cf0a0b988c15a948ebcd0aad2018dacf29e8ea5157621758385c922
Previous Hash: 2020ebe651423ce4b119b5bcffead93bf411e4e837ec4213d9301ffb25cbf956
Timestamp: 2022-02-14 03:37:36.696000Z
Nonce: 95226
Data: ... c59c ... sends ... cbf2 ... an amount of 3.



Block information
=================
Hash: 2020ebe651423ce4b119b5bcffead93bf411e4e837ec4213d9301ffb25cbf956
Previous Hash: 2020b2642f6307b9c027cb87f739f98b3bb629fcd4003045cee72b6037c2e3c5
Timestamp: 2022-02-14 03:37:36.623000Z
Nonce: 4092
Data: ... c59c ... sends ... cbf2 ... an amount of 1.



Block information
=================
Hash: 2020b2642f6307b9c027cb87f739f98b3bb629fcd4003045cee72b6037c2e3c5
Previous Hash: 2020ac93a883c7beca1b55bb457246f12bdfdd194ce98c0a9baf1c3fe89aca40
Timestamp: 2022-02-14 03:37:33.710000Z
Nonce: 148407
Data: ... cbf2 ... sends ... c59c ... an amount of 2.



Block information
=================
Hash: 2020ac93a883c7beca1b55bb457246f12bdfdd194ce98c0a9baf1c3fe89aca40
Previous Hash: 3133333763616665
Timestamp: 2022-02-14 03:37:33.005000Z
Nonce: 43473
Data: ... 187c ... sends ... cbf2 ... an amount of 100.



```

<!-- livebook:{"output":true} -->

```
:ok
```
